on:
  push:
    paths:
      - 'pingfederate/**'
      - 'vendor/**'
      - 'go.mod'
      - 'go.sum'
      - 'main.go'
      - '.github/workflows/functional.yaml'
      - 'func-tests/**'
  pull_request:
    paths:
      - 'pingfederate/**'
      - 'vendor/**'
      - 'go.mod'
      - 'go.sum'
      - 'main.go'
      - '.github/workflows/functional.yaml'
      - 'func-tests/**'
name: e2e
jobs:
  getdate:
    name: get date
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: getdate
        run: echo "::set-output name=date::$(date +'%y%m%d')"
    outputs:
      date: ${{ steps.getdate.outputs.date }}
  e2e:
    name: e2e
    needs: getdate
    strategy:
      fail-fast: false
      matrix:
        pingfederate-version: [ 10.0.6, 10.1.3, 10.2.2 ]
        terraform-version: [ 0.13.6, 0.14.5 ]
    services:
      pingfederate:
        image: pingidentity/pingfederate:${{ matrix.pingfederate-version }}-edge
        env:
          PING_IDENTITY_ACCEPT_EULA: YES
          PING_IDENTITY_DEVOPS_USER: ${{ secrets.PING_IDENTITY_DEVOPS_USER }}
          PING_IDENTITY_DEVOPS_KEY: ${{ secrets.PING_IDENTITY_DEVOPS_KEY }}
          SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
          SERVER_PROFILE_PATH: getting-started/pingfederate
          IMAGE_VERSION: pingfederate-alpine-az11-${{ matrix.pingfederate-version }}-${{ needs.getdate.outputs.date }}-d9b5
          PF_LOG_LEVEL: DEBUG
          TAIL_LOG_PARALLEL: "y"
          TAIL_LOG_FILES: "/opt/out/instance/log/server.log /opt/out/instance/log/admin-api.log"
        ports:
          - 9999:9999
          - 9031:9031

    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.terraform-version }}

      - name: Install Build and Deploy
        run: make build deploy-local

      - name: Terraform Init
        run: make func-init

      - name: Terraform Plan
        env:
          TF_VAR_pf_version: ${{ matrix.pingfederate-version }}
        run: make func-plan

      - name: Terraform Apply
        env:
          TF_VAR_pf_version: ${{ matrix.pingfederate-version }}
        run: make func-apply

      - name: Terraform Plan
        env:
          TF_VAR_pf_version: ${{ matrix.pingfederate-version }}
        run: terraform plan -detailed-exitcode
        working-directory: func-tests

      - name: Terraform Destroy
        env:
          TF_VAR_pf_version: ${{ matrix.pingfederate-version }}
        run: make func-destroy

      - name: Container logs
        if: ${{ failure() }}
        run: docker logs `docker ps --filter expose=9999 -q` && cat pingfederate/terraform.log
